from malware.sample import MalwareSample, PEMalwareSample
from malware.repository import MalwareRepository
from malware.report import MalwareAnalysisReport
from malware.source import ThreatIntelSource, YaraThreatSource

def check_malicious_software(malware_sample):
    if isinstance(malware_sample, MalwareSample):
        if malware_sample.detection_result:
            return f"Malicious Software: {malware_sample.file_name}"
        return f"Not a malicious Software: {malware_sample.file_name}"
    
    return f"Can check only instances of MalwareSample and PeMalwareSample classes"    


# Basic Malware Sample
malware_sample = MalwareSample("Dota2", "Pomoika2", True)
# malware_sample.display_info()        
pe_malware_sample = PEMalwareSample("CS2", "zaregai2", False, ['first', 'second'])
# pe_malware_sample.display_info()

# print(check_malicious_software(pe_malware_sample))
# print(check_malicious_software(malware_sample))


# Malware Repository

malware_repo = MalwareRepository()
# malware_repo.list_all_samples()
malware_repo.add_sample(malware_sample)
malware_repo.add_sample(pe_malware_sample)
malware_repo.remove_sample_by_hash('Pomoika2')
# malware_repo.list_all_samples()


# Malware cls method and static method

data_dictionary = {
    'file_name': 'heartstone',
    'file_hash': 'topdeck',
    'detection_result': True,
}

malware_sample_2 = MalwareSample.from_dict(data_dictionary)
# malware_sample_2.display_info()
# print(malware_sample_2.validate_hash(malware_sample_2.file_hash))


# Malware Report 
malware_sample_2_report = MalwareAnalysisReport(malware_sample_2, '2024-02-02', 'malicious')
# malware_sample_2_report.generate_repost()